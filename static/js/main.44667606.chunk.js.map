{"version":3,"sources":["components/SearchBar.js","components/UserCard.js","components/HomeMessage.js","components/Loader.js","components/UserFinder.js","components/Navbar.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["SearchBar","state","username","handleChange","e","setState","target","name","value","handleSubmit","preventDefault","props","onSubmit","this","className","class","type","placeholder","onChange","style","width","Component","UserCard","data","message","padding","margin","fontSize","src","avatar_url","alt","login","bio","public_repos","href","html_url","HomeMessage","Loader","bar","circle","UserFinder","isSearching","searchUser","fetch","then","resp","json","resJson","Navbar","Footer","rel","App","position","right","bottom","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.44667606.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass SearchBar extends Component {\n  state = {\n    username: \"\",\n  }\n\n  handleChange = e => {\n    this.setState({[e.target.name]: e.target.value});\n  }\n\n  handleSubmit = e => {\n    e.preventDefault();\n    this.props.handleSubmit(this.state.username);\n  }\n\n  render() { \n    return (\n      <form onSubmit={this.handleSubmit}>\n        <div className=\"row\">\n          <div className=\"input-field col s12 m9 l9\">\n            <i class=\"material-icons prefix\">account_circle</i>\n            <input type=\"text\" name=\"username\" placeholder=\"Enter username\" value={this.state.username} onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field col s12 m3 l3 w-auto\">\n          <button className=\"waves-effect waves-light btn\" style={{width:\"100%\"}}><i class=\"material-icons left\">search</i>search</button>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n \nexport default SearchBar;","import React from \"react\";\n\nconst UserCard = props => {\n  return (\n    <>\n      {props.data.message ? (\n        <div className=\"card-panel red darken-1 valign-wrapper\" style={{padding:\"1rem\"}}>\n          <div className=\"row\" style={{margin:0}}>\n            <div className=\"col valign-wrapper\">\n              <span className=\"white-text\">\n                <i className=\"material-icons medium\">warning</i>\n              </span>\n            </div>\n            <div className=\"col white-text valign-wrapper\">\n              <p style={{fontSize:\"1.3rem\"}}>We couldn't find a user with that username.</p>\n            </div>\n          </div>\n        </div>\n      ) : (\n        <div className=\"card blue-grey darken-2\">\n          <div className=\"card-content white-text\">\n            <div className=\"row\">\n              <div className=\"col m3\">\n                <img\n                  className=\"rounded\"\n                  width=\"100%\"\n                  src={props.data.avatar_url}\n                  alt=\"avatar\"\n                />\n              </div>\n              <div className=\"col m9\">\n                <span className=\"card-title\">{props.data.login}</span>\n                <p>{props.data.bio}</p>\n                <span className=\"badge blue white-text\">\n                  {props.data.public_repos} Public Repos\n                </span>\n                <div className=\"card-action\">\n                  <a href={props.data.html_url}>SEE ON GITHUB</a>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default UserCard;\n","import React from \"react\";\n\nconst HomeMessage = () => {\n  return (\n    <div className=\"container center\">\n      <i className=\"material-icons large\">recent_actors</i>\n      <h1 style={{ margin: 0 }}>Welcome</h1>\n      <h4 style={{ margin: 0 }}>to Git Finder</h4>\n      <p>Enter a username to search and start exploring!</p>\n    </div>\n  );\n};\n\nexport default HomeMessage;\n","import React from \"react\";\n\nconst Loader = props => {\n  return (\n    <>\n      {props.bar && (\n        <div class=\"progress\">\n          <div class=\"indeterminate\"></div>\n        </div>\n      )}\n      {props.circle && (\n        <div className=\"container center-align\">\n          <div class=\"preloader-wrapper big active\">\n            <div class=\"spinner-layer spinner-blue-only\">\n              <div class=\"circle-clipper left\">\n                <div class=\"circle\"></div>\n              </div>\n              <div class=\"gap-patch\">\n                <div class=\"circle\"></div>\n              </div>\n              <div class=\"circle-clipper right\">\n                <div class=\"circle\"></div>\n              </div>\n            </div>\n          </div>\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default Loader;\n","import React, { Component } from \"react\";\nimport SearchBar from \"./SearchBar\";\nimport UserCard from \"./UserCard\";\nimport { userData, repoData } from \"./mockData\";\nimport HomeMessage from \"./HomeMessage\";\nimport Loader from \"./Loader\";\n\n\nclass UserFinder extends Component {\n  state = {\n    data: \"\",\n    isSearching: false\n  };\n\n  searchUser = username => {\n    // this.setState({ data: userData });\n    this.setState({ isSearching: true });\n    fetch(`https://api.github.com/users/${username}`)\n      .then(resp => resp.json())\n      .then(resJson => this.setState({ data: resJson, isSearching: false }));\n  };\n\n  render() {\n    return (\n      <>\n        <SearchBar handleSubmit={this.searchUser} />\n        {!this.state.data && !this.state.isSearching && (\n          <HomeMessage />\n        )}\n        {this.state.isSearching && <Loader bar />}\n        {this.state.data !== \"\" && !this.state.isSearching && (\n          <UserCard data={this.state.data} />\n        )}\n      </>\n    );\n  }\n}\n\nexport default UserFinder;\n","import React from 'react';\n\nconst Navbar = () => {\n  return(\n    <nav>\n      <div className=\"nav-wrapper teal darken-3 pd3\">\n        <a href=\"\" className=\"brand-logo\"><i className=\"material-icons\">history</i>Git Finder</a>\n        <ul className=\"right hide-on-med-and-down\">\n          <li><a href=\"#\">Home</a></li>\n          <li><a href=\"#\">Main</a></li>\n          <li><a href=\"#\">Entry</a></li>\n        </ul>\n      </div>\n    </nav>\n  );\n}\n\nexport default Navbar;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer class=\"page-footer teal darken-2\">\n      <div className=\"container hide-on-med-and-down\">\n        <div className=\"row\">\n          This app uses free GitHub API for retrieving the user data. We don't\n          use cookies, so you don't have to accept anything! Also there isn't a\n          privacy policy or something like that.\n        </div>\n      </div>\n      <div class=\"footer-copyright teal darken-4\">\n        <div class=\"container\">\n          Developed by JamCry Â© 2019\n          <a class=\"grey-text text-lighten-4 right\" href=\"https://cemkiray.com\" target=\"_blank\" rel=\"noopener noreferrer\">\n            Contact\n          </a>\n        </div>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\nimport UserFinder from './components/UserFinder';\nimport Navbar from './components/Navbar';\nimport Footer from './components/Footer';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <main>\n        <div className=\"container\">\n          <UserFinder />\n        </div>\n        <a\n          style={{position:\"absolute\", right:\"5%\", bottom:\"10%\" }}\n          className=\"pulse btn-floating btn-large waves-effect waves-light pink lighten-1\"\n          href=\"https://github.com/jamcry/react-github-user-finder\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <i class=\"material-icons\">favorite</i>\n        </a>\n      </main>\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}